// Code generated by "enumer -type ResourceType -addprefix azurerm_ -transform snake -linecomment"; DO NOT EDIT.

package azurerm

import (
	"fmt"
)

const _ResourceTypeName = "azurerm_resource_groupazurerm_virtual_machineazurerm_virtual_networkazurerm_subnetazurerm_network_interfaceazurerm_network_security_groupazurerm_virtual_machine_scale_set"

var _ResourceTypeIndex = [...]uint8{0, 22, 45, 68, 82, 107, 137, 170}

const _ResourceTypeLowerName = "azurerm_resource_groupazurerm_virtual_machineazurerm_virtual_networkazurerm_subnetazurerm_network_interfaceazurerm_network_security_groupazurerm_virtual_machine_scale_set"

func (i ResourceType) String() string {
	if i < 0 || i >= ResourceType(len(_ResourceTypeIndex)-1) {
		return fmt.Sprintf("ResourceType(%d)", i)
	}
	return _ResourceTypeName[_ResourceTypeIndex[i]:_ResourceTypeIndex[i+1]]
}

var _ResourceTypeValues = []ResourceType{0, 1, 2, 3, 4, 5, 6}

var _ResourceTypeNameToValueMap = map[string]ResourceType{
	_ResourceTypeName[0:22]:         0,
	_ResourceTypeLowerName[0:22]:    0,
	_ResourceTypeName[22:45]:        1,
	_ResourceTypeLowerName[22:45]:   1,
	_ResourceTypeName[45:68]:        2,
	_ResourceTypeLowerName[45:68]:   2,
	_ResourceTypeName[68:82]:        3,
	_ResourceTypeLowerName[68:82]:   3,
	_ResourceTypeName[82:107]:       4,
	_ResourceTypeLowerName[82:107]:  4,
	_ResourceTypeName[107:137]:      5,
	_ResourceTypeLowerName[107:137]: 5,
	_ResourceTypeName[137:170]:      6,
	_ResourceTypeLowerName[137:170]: 6,
}

var _ResourceTypeNames = []string{
	_ResourceTypeName[0:22],
	_ResourceTypeName[22:45],
	_ResourceTypeName[45:68],
	_ResourceTypeName[68:82],
	_ResourceTypeName[82:107],
	_ResourceTypeName[107:137],
	_ResourceTypeName[137:170],
}

// ResourceTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ResourceTypeString(s string) (ResourceType, error) {
	if val, ok := _ResourceTypeNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ResourceType values", s)
}

// ResourceTypeValues returns all values of the enum
func ResourceTypeValues() []ResourceType {
	return _ResourceTypeValues
}

// ResourceTypeStrings returns a slice of all String values of the enum
func ResourceTypeStrings() []string {
	strs := make([]string, len(_ResourceTypeNames))
	copy(strs, _ResourceTypeNames)
	return strs
}

// IsAResourceType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ResourceType) IsAResourceType() bool {
	for _, v := range _ResourceTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
