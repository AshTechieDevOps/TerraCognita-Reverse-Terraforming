// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cycloidio/terracognita/writer (interfaces: Writer)

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Writer is a mock of Writer interface
type Writer struct {
	ctrl     *gomock.Controller
	recorder *WriterMockRecorder
}

// WriterMockRecorder is the mock recorder for Writer
type WriterMockRecorder struct {
	mock *Writer
}

// NewWriter creates a new mock instance
func NewWriter(ctrl *gomock.Controller) *Writer {
	mock := &Writer{ctrl: ctrl}
	mock.recorder = &WriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Writer) EXPECT() *WriterMockRecorder {
	return m.recorder
}

// Sync mocks base method
func (m *Writer) Sync() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Sync")
	ret0, _ := ret[0].(error)
	return ret0
}

// Sync indicates an expected call of Sync
func (mr *WriterMockRecorder) Sync() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Sync", reflect.TypeOf((*Writer)(nil).Sync))
}

// Write mocks base method
func (m *Writer) Write(arg0 string, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Write", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Write indicates an expected call of Write
func (mr *WriterMockRecorder) Write(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Write", reflect.TypeOf((*Writer)(nil).Write), arg0, arg1)
}
